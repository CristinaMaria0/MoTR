gather(metric, value, 6:10) %>%
mutate(condition = case_when(
cond_id == 1 ~ "high", # Really, "no-comma"
cond_id == 2 ~ "low", # Really, "comma"
cond_id == 3 ~ "high",
cond_id == 4 ~ "low",
cond_id == 5 ~ "high",
cond_id == 6 ~ "low",
cond_id == 8 ~ "filler"
)) %>%
mutate(experiment = case_when(
cond_id %in% c(1, 2) ~ "Coordination",
cond_id %in% c(3, 4) ~ "Adverb",
cond_id %in% c(5, 6) ~ "Relative Clause",
cond_id %in% c(8) ~ "Filler"
)) %>%
rename(item_id = para_nr) %>%
dplyr::select(-cond_id, -expr_id) %>%
filter(experiment != "Filler") %>%
# Filter out sentences where the participant focuses on less than 1/5 of the total words, i.e. where they are skimming
group_by(item_id, subj, metric, condition, experiment) %>%
mutate(fixed = if_else(value > 0, 1, 0),
n_fixed = sum(fixed),
n_words = n()) %>%
ungroup()
motr_df
motr_df = raw_df %>%
gather(metric, value, 6:10) %>%
mutate(condition = case_when(
cond_id == 1 ~ "high", # Really, "no-comma"
cond_id == 2 ~ "low", # Really, "comma"
cond_id == 3 ~ "high",
cond_id == 4 ~ "low",
cond_id == 5 ~ "high",
cond_id == 6 ~ "low",
cond_id == 8 ~ "filler"
)) %>%
mutate(experiment = case_when(
cond_id %in% c(1, 2) ~ "Coordination",
cond_id %in% c(3, 4) ~ "Adverb",
cond_id %in% c(5, 6) ~ "Relative Clause",
cond_id %in% c(8) ~ "Filler"
)) %>%
rename(item_id = para_nr) %>%
dplyr::select(-cond_id, -expr_id) %>%
filter(experiment != "Filler") %>%
group_by(item_id, subj, metric, condition, experiment) %>%
summarise(fixed = if_else(value > 0, 1, 0),
n_fixed = sum(fixed),
n_words = n()) %>%
ungroup() %>%
mutate(fix_threshold = n_fixed > (n_words / 5))
motr_df
motr_df = raw_df %>%
gather(metric, value, 6:10) %>%
mutate(condition = case_when(
cond_id == 1 ~ "high", # Really, "no-comma"
cond_id == 2 ~ "low", # Really, "comma"
cond_id == 3 ~ "high",
cond_id == 4 ~ "low",
cond_id == 5 ~ "high",
cond_id == 6 ~ "low",
cond_id == 8 ~ "filler"
)) %>%
mutate(experiment = case_when(
cond_id %in% c(1, 2) ~ "Coordination",
cond_id %in% c(3, 4) ~ "Adverb",
cond_id %in% c(5, 6) ~ "Relative Clause",
cond_id %in% c(8) ~ "Filler"
)) %>%
rename(item_id = para_nr) %>%
dplyr::select(-cond_id, -expr_id) %>%
filter(experiment != "Filler") %>%
group_by(item_id, subj, metric, condition, experiment) %>%
mutate(fixed = if_else(value > 0, 1, 0)) %>%
ungroup() %>%
group_by(item_id, subj, metric, condition, experiment) %>%
summarise(n_fixed = sum(fixed),
n_words = n()) %>%
ungroup() %>%
mutate(fix_threshold = n_fixed > (n_words / 5))
motr_df
motr_df = raw_df %>%
gather(metric, value, 6:10) %>%
mutate(condition = case_when(
cond_id == 1 ~ "high", # Really, "no-comma"
cond_id == 2 ~ "low", # Really, "comma"
cond_id == 3 ~ "high",
cond_id == 4 ~ "low",
cond_id == 5 ~ "high",
cond_id == 6 ~ "low",
cond_id == 8 ~ "filler"
)) %>%
mutate(experiment = case_when(
cond_id %in% c(1, 2) ~ "Coordination",
cond_id %in% c(3, 4) ~ "Adverb",
cond_id %in% c(5, 6) ~ "Relative Clause",
cond_id %in% c(8) ~ "Filler"
)) %>%
rename(item_id = para_nr) %>%
dplyr::select(-cond_id, -expr_id) %>%
filter(experiment != "Filler") %>%
group_by(item_id, subj, metric, condition, experiment) %>%
mutate(fixed = if_else(value > 0, 1, 0)) %>%
mutaet(fixed = if_else(metric == "FPReg", 1, fixed)) %>%
ungroup() %>%
group_by(item_id, subj, metric, condition, experiment) %>%
summarise(n_fixed = sum(fixed),
n_words = n()) %>%
ungroup() %>%
mutate(fix_threshold = n_fixed > (n_words / 5))
motr_df = raw_df %>%
gather(metric, value, 6:10) %>%
mutate(condition = case_when(
cond_id == 1 ~ "high", # Really, "no-comma"
cond_id == 2 ~ "low", # Really, "comma"
cond_id == 3 ~ "high",
cond_id == 4 ~ "low",
cond_id == 5 ~ "high",
cond_id == 6 ~ "low",
cond_id == 8 ~ "filler"
)) %>%
mutate(experiment = case_when(
cond_id %in% c(1, 2) ~ "Coordination",
cond_id %in% c(3, 4) ~ "Adverb",
cond_id %in% c(5, 6) ~ "Relative Clause",
cond_id %in% c(8) ~ "Filler"
)) %>%
rename(item_id = para_nr) %>%
dplyr::select(-cond_id, -expr_id) %>%
filter(experiment != "Filler") %>%
group_by(item_id, subj, metric, condition, experiment) %>%
mutate(fixed = if_else(value > 0, 1, 0)) %>%
mutate(fixed = if_else(metric == "FPReg", 1, fixed)) %>%
ungroup() %>%
group_by(item_id, subj, metric, condition, experiment) %>%
summarise(n_fixed = sum(fixed),
n_words = n()) %>%
ungroup() %>%
mutate(fix_threshold = n_fixed > (n_words / 5))
motr_df
motr_df = raw_df %>%
gather(metric, value, 6:10) %>%
mutate(condition = case_when(
cond_id == 1 ~ "high", # Really, "no-comma"
cond_id == 2 ~ "low", # Really, "comma"
cond_id == 3 ~ "high",
cond_id == 4 ~ "low",
cond_id == 5 ~ "high",
cond_id == 6 ~ "low",
cond_id == 8 ~ "filler"
)) %>%
mutate(experiment = case_when(
cond_id %in% c(1, 2) ~ "Coordination",
cond_id %in% c(3, 4) ~ "Adverb",
cond_id %in% c(5, 6) ~ "Relative Clause",
cond_id %in% c(8) ~ "Filler"
)) %>%
rename(item_id = para_nr) %>%
dplyr::select(-cond_id, -expr_id) %>%
filter(experiment != "Filler") %>%
# Filter out sentences where the participant focuses on less than 1/5 of the total words, i.e. where they are skimming
group_by(item_id, subj, metric, condition, experiment) %>%
mutate(fixed = if_else(value > 0, 1, 0),
fixed = if_else(metric = "FPReg", 1, fixed),
n_fixed = sum(fixed),
n_words = n()) %>%
ungroup() %>%
mutate(fix_threshold = n_fixed > (n_words / 5)) %>%
mutate(skimming = if_else(fix_threshold == F,T, F)) %>%
#Filter out words that are more than 4 SDs away from the mean of their reading time
group_by(metric) %>%
mutate(outlier = value > (mean(value) + 3 * sd(value))) %>%
ungroup() %>%
mutate(outlier_discard = if_else(metric %in% c("first_duration", "gaze_duration", "total_duration", "go_past_time") & outlier == T, F, T)) %>%
filter(outlier_discard == T) %>%
drop_na()
motr_df = raw_df %>%
gather(metric, value, 6:10) %>%
mutate(condition = case_when(
cond_id == 1 ~ "high", # Really, "no-comma"
cond_id == 2 ~ "low", # Really, "comma"
cond_id == 3 ~ "high",
cond_id == 4 ~ "low",
cond_id == 5 ~ "high",
cond_id == 6 ~ "low",
cond_id == 8 ~ "filler"
)) %>%
mutate(experiment = case_when(
cond_id %in% c(1, 2) ~ "Coordination",
cond_id %in% c(3, 4) ~ "Adverb",
cond_id %in% c(5, 6) ~ "Relative Clause",
cond_id %in% c(8) ~ "Filler"
)) %>%
rename(item_id = para_nr) %>%
dplyr::select(-cond_id, -expr_id) %>%
filter(experiment != "Filler") %>%
# Filter out sentences where the participant focuses on less than 1/5 of the total words, i.e. where they are skimming
group_by(item_id, subj, metric, condition, experiment) %>%
mutate(fixed = if_else(value > 0, 1, 0),
fixed = if_else(metric == "FPReg", 1, fixed),
n_fixed = sum(fixed),
n_words = n()) %>%
ungroup() %>%
mutate(fix_threshold = n_fixed > (n_words / 5)) %>%
mutate(skimming = if_else(fix_threshold == F,T, F)) %>%
#Filter out words that are more than 4 SDs away from the mean of their reading time
group_by(metric) %>%
mutate(outlier = value > (mean(value) + 3 * sd(value))) %>%
ungroup() %>%
mutate(outlier_discard = if_else(metric %in% c("first_duration", "gaze_duration", "total_duration", "go_past_time") & outlier == T, F, T)) %>%
filter(outlier_discard == T) %>%
drop_na()
motr_df
motr_df = raw_df %>%
gather(metric, value, 6:10) %>%
mutate(condition = case_when(
cond_id == 1 ~ "high", # Really, "no-comma"
cond_id == 2 ~ "low", # Really, "comma"
cond_id == 3 ~ "high",
cond_id == 4 ~ "low",
cond_id == 5 ~ "high",
cond_id == 6 ~ "low",
cond_id == 8 ~ "filler"
)) %>%
mutate(experiment = case_when(
cond_id %in% c(1, 2) ~ "Coordination",
cond_id %in% c(3, 4) ~ "Adverb",
cond_id %in% c(5, 6) ~ "Relative Clause",
cond_id %in% c(8) ~ "Filler"
)) %>%
rename(item_id = para_nr) %>%
dplyr::select(-cond_id, -expr_id) %>%
filter(experiment != "Filler") %>%
# Filter out sentences where the participant focuses on less than 1/5 of the total words, i.e. where they are skimming
group_by(item_id, subj, metric, condition, experiment) %>%
mutate(fixed = if_else(value > 0, 1, 0),
fixed = if_else(metric == "FPReg", 1, fixed),
n_fixed = sum(fixed),
n_words = n()) %>%
ungroup() %>%
mutate(fix_threshold = n_fixed > (n_words / 5)) %>%
mutate(skimming = if_else(fix_threshold == F,T, F)) %>%
#Filter out words that are more than 4 SDs away from the mean of their reading time
group_by(metric) %>%
mutate(outlier = value > (mean(value) + 3 * sd(value))) %>%
ungroup() %>%
mutate(outlier_discard = if_else(metric %in% c("first_duration", "gaze_duration", "total_duration", "go_past_time") & outlier == T, F, T)) %>%
filter(outlier_discard == T) %>%
drop_na() %>%
# Finally, filter out all the sentences that were skimmed
filter(skimming == F) %>%
dplyr::select(-fixed, -n_fixed, -n_words, -fix_threshold, -skimming, -outlier)
motr_df
motr_df = raw_df %>%
gather(metric, value, 6:10) %>%
mutate(condition = case_when(
cond_id == 1 ~ "high", # Really, "no-comma"
cond_id == 2 ~ "low", # Really, "comma"
cond_id == 3 ~ "high",
cond_id == 4 ~ "low",
cond_id == 5 ~ "high",
cond_id == 6 ~ "low",
cond_id == 8 ~ "filler"
)) %>%
mutate(experiment = case_when(
cond_id %in% c(1, 2) ~ "Coordination",
cond_id %in% c(3, 4) ~ "Adverb",
cond_id %in% c(5, 6) ~ "Relative Clause",
cond_id %in% c(8) ~ "Filler"
)) %>%
rename(item_id = para_nr) %>%
dplyr::select(-cond_id, -expr_id) %>%
filter(experiment != "Filler") %>%
# Filter out sentences where the participant focuses on less than 1/5 of the total words, i.e. where they are skimming
group_by(item_id, subj, metric, condition, experiment) %>%
mutate(fixed = if_else(value > 0, 1, 0),
fixed = if_else(metric == "FPReg", 1, fixed),
n_fixed = sum(fixed),
n_words = n()) %>%
ungroup() %>%
mutate(fix_threshold = n_fixed > (n_words / 5)) %>%
mutate(skimming = if_else(fix_threshold == F,T, F)) %>%
#Filter out words that are more than 4 SDs away from the mean of their reading time
group_by(metric) %>%
mutate(outlier = value > (mean(value) + 3 * sd(value))) %>%
ungroup()
motr_df
comb_clean_df
comb_clean_df %>%
filter(measure == "MoTR", metric = "FPreg") %>%
filter(metric >= 0) %>%
summarise(m = mean(metric))
comb_clean_df %>%
filter(measure == "MoTR", metric == "FPreg") %>%
filter(metric >= 0) %>%
summarise(m = mean(metric))
comb_clean_df %>%
filter(measure == "MoTR", metric == "FPreg") %>%
filter(metric >= 0)
comb_clean_df
comb_clean_df %>%
filter(measure == "MoTR", metric == "FPReg") %>%
filter(metric >= 0) %>%
summarise(m = mean(metric))
comb_clean_df %>%
filter(measure == "MoTR", metric == "FPReg") %>%
filter(metric >= 0)
comb_clean_df %>%
filter(measure == "MoTR", metric == "FPReg") %>%
filter(metric >= 0) %>%
summarise(m = mean(value))
View(motr_clean_df)
motr_clean_df = motr_df %>%
#Filter out sentence regions with a reading-time of zero
mutate(zero = if_else(metric != "FPReg" & value == 0,T, F)) %>%
filter(zero == F) %>%
dplyr::select(-zero) %>%
group_by(subj, experiment, condition, item_id, sent_rg_id, metric) %>%
summarise(value = if_else(metric == "FPReg", as.double(any(value)), mean(value))) %>%
ungroup() %>%
mutate(measure = "MoTR")
comb_clean_df
comb_clean_df %>%
filter(measure == "MoTR", metric == "FPReg") %>%
filter(metric >= 0) %>%
filter(sent_rg_id == 0) %>%
summarise(m = mean(value))
comb_clean_df %>%
filter(measure == "MoTR", metric == "FPReg") %>%
filter(metric >= 0) %>%
filter(sent_rg_id == 1) %>%
summarise(m = mean(value))
comb_clean_df %>%
filter(measure == "MoTR", metric == "FPReg") %>%
filter(metric >= 0) %>%
filter(sent_rg_id == 2) %>%
summarise(m = mean(value))
comb_clean_df %>%
filter(measure == "MoTR", metric == "FPReg") %>%
filter(metric >= 0) %>%
filter(sent_rg_id == -1) %>%
summarise(m = mean(value))
comb_clean_df %>%
filter(measure == "MoTR", metric == "FPReg") %>%
filter(metric >= 0) %>%
summarise(m = mean(value))
raw_df
raw_df %>%
mean(FPReg)
raw_df %>%
dplyr::select(FPReg) %>%
drop_na() %>%
summarise( m = mean(FPReg))
df
raw_df = df %>%
filter(! subj %in% c(filter_list)) %>%
mutate(subj = str_remove(subj, "reader_")) %>%
mutate(subj = as.integer(subj)) %>%
# Filter out participants who were bots
#filter(! subj %in% c(118, 119, 120, 107, 103, 130, 6, 19) ) %>%
# See below for filtering out reading measures that are super long
dplyr::select(expr_id, cond_id, para_nr, word, word_nr, first_duration, total_duration, gaze_duration, go_past_time, FPReg, subj, sent_rg_id, sent_rg, FPFix)
df %>%
filter(! subj %in% c(filter_list)) %>%
dplyr::select(FPReg) %>%
drop_na() %>%
summarise( m = mean(FPReg))
df %>%
filter(! subj %in% c(filter_list)) %>%
dplyr::select(FPReg) %>%
drop_na() %>%
summarise( m = mean(FPFix))
df %>%
filter(! subj %in% c(filter_list)) %>%
dplyr::select(FPReg) %>%
drop_na()
df %>%
filter(! subj %in% c(filter_list)) %>%
dplyr::select(FPFix) %>%
drop_na() %>%
summarise( m = mean(FPFix))
df %>%
filter(! subj %in% c(filter_list)) %>%
dplyr::select(FPReg) %>%
drop_na() %>%
summarise( m = mean(FPReg))
shhh <- suppressPackageStartupMessages # It's a library, so shhh!
shhh(library( mgcv ))
shhh(library(dplyr))
shhh(library(ggplot2))
shhh(library(lme4))
shhh(library(tidymv))
shhh(library(gamlss))
shhh(library(gsubfn))
shhh(library(lmerTest))
shhh(library(tidyverse))
shhh(library(boot))
shhh(library(rsample))
shhh(library(plotrix))
shhh(library(ggrepel))
shhh(library(mgcv))
theme_set(theme_bw())
options(digits=4)
options(scipen=999)
set.seed(444)
pipe_message = function(.data, status) {message(status); .data}
rate = 160
file_prefix = "../reading_measures/provo/provo_f160/"
fnames = list.files(path=file_prefix)
df = data.frame()
for (f in fnames) {
temp = read.csv(paste0(file_prefix, "/", f)) %>%
mutate(subj = str_remove(f, "_reading_measures.csv"))
df = rbind(df, temp)
}
# Filter out readers who don't answer the comprehension questions correctly
filter_df = df %>%
group_by(para_nr, subj) %>% summarise(correct = if_else(unique(correctness) == 1, 1, 0)) %>% ungroup() %>%
drop_na() %>%
group_by(subj) %>% summarise(p_correct = mean(correct)) %>% ungroup() %>%
mutate(p_correct = round(p_correct, digits = 2))
filter_df = filter_df %>% filter(p_correct < 0.8)
filter_list = filter_df$subj
## reader_3:0.70, reader_60:0.79, reader_76:0.72 , reader_256:0.71 , reader_262:0.57
raw_df = df %>%
filter(! subj %in% c(filter_list)) %>%
mutate(word = str_trim(word)) %>%
mutate(subj = str_remove(subj, "reader_")) %>%
mutate(subj = as.character(subj)) %>%
#filter(! subj %in% c("3", "60", "76", "256", "262")) %>% # Explanation for this filtering
mutate(FPReg = if_else(total_duration == 0, -1, FPReg)) %>% #If the word is skipped we can't say that it wasn't regressed on the first pass. Set to a "NA"
dplyr::select(expr_id, cond_id, para_nr, word, word_nr, first_duration, total_duration, gaze_duration, go_past_time, FPReg, subj)
length(unique(raw_df$subj))
raw_df
df
rate = 160
file_prefix = "../reading_measures/provo/provo_f160/"
fnames = list.files(path=file_prefix)
df = data.frame()
for (f in fnames) {
temp = read.csv(paste0(file_prefix, "/", f)) %>%
mutate(subj = str_remove(f, "_reading_measures.csv"))
df = rbind(df, temp)
}
# Filter out readers who don't answer the comprehension questions correctly
filter_df = df %>%
group_by(para_nr, subj) %>% summarise(correct = if_else(unique(correctness) == 1, 1, 0)) %>% ungroup() %>%
drop_na() %>%
group_by(subj) %>% summarise(p_correct = mean(correct)) %>% ungroup() %>%
mutate(p_correct = round(p_correct, digits = 2))
filter_df = filter_df %>% filter(p_correct < 0.8)
filter_list = filter_df$subj
## reader_3:0.70, reader_60:0.79, reader_76:0.72 , reader_256:0.71 , reader_262:0.57
raw_df = df %>%
filter(! subj %in% c(filter_list)) %>%
mutate(word = str_trim(word)) %>%
mutate(subj = str_remove(subj, "reader_")) %>%
mutate(subj = as.character(subj)) %>%
#filter(! subj %in% c("3", "60", "76", "256", "262")) %>% # Explanation for this filtering
mutate(FPReg = if_else(total_duration == 0, -1, FPReg)) %>% #If the word is skipped we can't say that it wasn't regressed on the first pass. Set to a "NA"
dplyr::select(expr_id, cond_id, para_nr, word, word_nr, first_duration, total_duration, gaze_duration, go_past_time, FPReg, subj)
length(unique(raw_df$subj))
df %>%
filter(! subj %in% c(filter_list)) %>%
filter(FPReg >= 0) %>%
dplyr::select(FPReg) %>%
drop_na() %>%
summarise( m = mean(FPReg))
df %>%
filter(! subj %in% c(filter_list)) %>%
dplyr::select(FPFix) %>%
drop_na() %>%
summarise( m = mean(FPFix))
df %>%
filter(! subj %in% c(filter_list)) %>%
filter(FPReg >= 0) %>%
dplyr::select(FPReg) %>%
drop_na() %>%
summarise( m = mean(FPReg))
df %>%
filter(! subj %in% c(filter_list)) %>%
dplyr::select(FPFix) %>%
drop_na() %>%
summarise( m = mean(FPFix))
provo_raw_df
provo_raw_df %>%
dplyr::select(IA_REGRESSION_OUT) %>%
drop_na()
provo_raw_df %>%
dplyr::select(IA_REGRESSION_OUT) %>%
drop_na() %>%
summarise( m = mean(IA_REGRESSION_OUT))
provo_raw_df %>%
dplyr::select(IA_SKIP) %>%
drop_na() %>%
summarise( m = mean(IA_SKIP))
df %>%
filter(! subj %in% c(filter_list)) %>%
filter(FPReg >= 0) %>%
dplyr::select(FPReg)
df %>%
filter(! subj %in% c(filter_list)) %>%
filter(FPReg >= 0) %>%
dplyr::select(FPReg) %>%
drop_na() %>%
summarise( m = mean(FPReg))
df %>%
filter(! subj %in% c(filter_list)) %>%
dplyr::select(FPFix) %>%
drop_na() %>%
summarise( m = mean(FPFix))
