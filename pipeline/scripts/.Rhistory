geom_hline(yintercept = 0, color = "blue") +
geom_point() +
geom_errorbar(aes(ymax = upper, ymin = lower), width = 0.1) +
geom_line() +
geom_text(aes(label = cris, y = if_else(metric == "Regression Prob", 0.13, 230) ), size = 1.8) +
geom_text(aes(x = 0, y = if_else(metric == "Regression Prob", 0.15, 280), label=""), show.legend = FALSE) +
scale_color_manual(values = c("#000000", "#2eccc1")) +
coord_cartesian(xlim = c(-1.25, 2.25)) +
ylab("Difference in RTs (ms) Between Conditions") +
xlab("Sentence Region") +
scale_x_continuous(breaks = c(-1, 0, 1, 2), labels= c ("Pre-Critical", "Critical", "Critical +1", "Critcal +2")) +
labs(color = "", linetype = "") +
facet_wrap(experiment~metric, scales="free_y", nrow = 3) +
theme(
legend.position = "bottom",
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
panel.grid.minor = element_blank()
)
ggsave(paste0("../visualization/paper/target_results_bayesisan", rate, ".pdf"), device="pdf", width = 8, height = 5.5)
# PLOTTING FOR ONLY MOTR AND EYE TRACKING
plotting_df %>%
filter(measure == "MoTR" | measure == "Eye Tracking") %>%
ggplot(aes(x = sent_rg_id, y = m, color = measure, linetype = measure)) +
geom_hline(yintercept = 0, color = "blue") +
geom_point() +
geom_errorbar(aes(ymax = upper, ymin = lower), width = 0.1) +
geom_line() +
geom_text(aes(label = cris, y = if_else(metric == "Regression Prob", 0.13, 200) ), size = 1.8) +
geom_text(aes(x = 0, y = if_else(metric == "Regression Prob", 0.15, 280), label=""), show.legend = FALSE) +
scale_color_manual(values = c("#000000", "#2eccc1")) +
coord_cartesian(xlim = c(-1.25, 2.25)) +
ylab("Difference in RTs (ms) Between Conditions") +
xlab("Sentence Region") +
scale_x_continuous(breaks = c(-1, 0, 1, 2), labels= c ("Pre-Critical", "Critical", "Critical +1", "Critcal +2")) +
labs(color = "", linetype = "") +
facet_wrap(experiment~metric, scales="free_y", nrow = 3) +
theme(
legend.position = "bottom",
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
panel.grid.minor = element_blank()
)
ggsave(paste0("../visualization/paper/target_results_bayesisan", rate, ".pdf"), device="pdf", width = 8, height = 5.5)
# PLOTTING FOR ONLY MOTR AND EYE TRACKING
plotting_df %>%
filter(measure == "MoTR" | measure == "Eye Tracking") %>%
ggplot(aes(x = sent_rg_id, y = m, color = measure, linetype = measure)) +
geom_hline(yintercept = 0, color = "blue") +
geom_point() +
geom_errorbar(aes(ymax = upper, ymin = lower), width = 0.1) +
geom_line() +
geom_text(aes(label = cris, y = if_else(metric == "Regression Prob", 0.13, 200) ), size = 1.8) +
geom_text(aes(x = 0, y = if_else(metric == "Regression Prob", 0.15, 230), label=""), show.legend = FALSE) +
scale_color_manual(values = c("#000000", "#2eccc1")) +
coord_cartesian(xlim = c(-1.25, 2.25)) +
ylab("Difference in RTs (ms) Between Conditions") +
xlab("Sentence Region") +
scale_x_continuous(breaks = c(-1, 0, 1, 2), labels= c ("Pre-Critical", "Critical", "Critical +1", "Critcal +2")) +
labs(color = "", linetype = "") +
facet_wrap(experiment~metric, scales="free_y", nrow = 3) +
theme(
legend.position = "bottom",
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
panel.grid.minor = element_blank()
)
ggsave(paste0("../visualization/paper/target_results_bayesisan", rate, ".pdf"), device="pdf", width = 8, height = 5.5)
stats_df_bayesian <- read.csv("../results_data/stats_bayesian.csv")%>%
dplyr::select(-estimate, -lower_95, -upper_95, -std_error) %>%
rename(estimate_mean = mean)
plotting_df = merge(comb_agg_df, stats_df_bayesian, all=T, by = c("sent_rg_id", "metric", "experiment", "measure")) %>%
mutate(sig = if_else(measure != "Eye Tracking" & (upper_95_ms < 0 | lower_95_ms > 0), T, F)) %>%
mutate(cris = if_else(measure != "Eye Tracking" & sig == T, paste0("[",round(lower_95_ms, 2), ",\n    ", round(upper_95_ms, 2),"]"), "")) %>%
#mutate(sig = if_else(measure != "Eye Tracking" & (upper_95_ms < 0 | lower_95_ms > 0), paste("X", sep = ""), F)) %>%
mutate(measure = factor(measure, levels = c("MoTR", "Eye Tracking", "A-Maze", "G-Maze", "SPR"))) %>%
mutate(metric = factor(metric, levels = c("first_duration", "gaze_duration", "go_past_time", "total_duration", "FPReg"),
labels = c("First Duration", "Gaze Duration", "Go Past Time", "Total Duration", "Regression Prob"))) %>%
filter(metric != "First Duration")
# PLOTTING FOR ONLY MOTR AND EYE TRACKING
plotting_df %>%
filter(measure == "MoTR" | measure == "Eye Tracking") %>%
ggplot(aes(x = sent_rg_id, y = m, color = measure, linetype = measure)) +
geom_hline(yintercept = 0, color = "blue") +
geom_point() +
geom_errorbar(aes(ymax = upper, ymin = lower), width = 0.1) +
geom_line() +
geom_text(aes(label = cris, y = if_else(metric == "Regression Prob", 0.13, 200) ), size = 1.8) +
geom_text(aes(x = 0, y = if_else(metric == "Regression Prob", 0.15, 230), label=""), show.legend = FALSE) +
scale_color_manual(values = c("#000000", "#2eccc1")) +
coord_cartesian(xlim = c(-1.25, 2.25)) +
ylab("Difference in RTs (ms) Between Conditions") +
xlab("Sentence Region") +
scale_x_continuous(breaks = c(-1, 0, 1, 2), labels= c ("Pre-Critical", "Critical", "Critical +1", "Critcal +2")) +
labs(color = "", linetype = "") +
facet_wrap(experiment~metric, scales="free_y", nrow = 3) +
theme(
legend.position = "bottom",
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
panel.grid.minor = element_blank()
)
ggsave(paste0("../visualization/paper/target_results_bayesisan", rate, ".pdf"), device="pdf", width = 8, height = 5.5)
stats_df_bayesian <- read.csv("../results_data/stats_bayesian.csv")%>%
dplyr::select(-estimate, -lower_95, -upper_95, -std_error) %>%
rename(estimate_mean = mean)
plotting_df = merge(comb_agg_df, stats_df_bayesian, all=T, by = c("sent_rg_id", "metric", "experiment", "measure")) %>%
mutate(sig = if_else(measure != "Eye Tracking" & (upper_95_ms < 0 | lower_95_ms > 0), T, F)) %>%
mutate(cris = if_else(measure != "Eye Tracking" & sig == T, paste0("[",round(lower_95_ms, 2), ",\n", round(upper_95_ms, 2),"]"), "")) %>%
#mutate(sig = if_else(measure != "Eye Tracking" & (upper_95_ms < 0 | lower_95_ms > 0), paste("X", sep = ""), F)) %>%
mutate(measure = factor(measure, levels = c("MoTR", "Eye Tracking", "A-Maze", "G-Maze", "SPR"))) %>%
mutate(metric = factor(metric, levels = c("first_duration", "gaze_duration", "go_past_time", "total_duration", "FPReg"),
labels = c("First Duration", "Gaze Duration", "Go Past Time", "Total Duration", "Regression Prob"))) %>%
filter(metric != "First Duration")
# PLOTTING FOR ONLY MOTR AND EYE TRACKING
plotting_df %>%
filter(measure == "MoTR" | measure == "Eye Tracking") %>%
ggplot(aes(x = sent_rg_id, y = m, color = measure, linetype = measure)) +
geom_hline(yintercept = 0, color = "blue") +
geom_point() +
geom_errorbar(aes(ymax = upper, ymin = lower), width = 0.1) +
geom_line() +
geom_text(aes(label = cris, y = if_else(metric == "Regression Prob", 0.13, 200) ), size = 1.8) +
geom_text(aes(x = 0, y = if_else(metric == "Regression Prob", 0.15, 230), label=""), show.legend = FALSE) +
scale_color_manual(values = c("#000000", "#2eccc1")) +
coord_cartesian(xlim = c(-1.25, 2.25)) +
ylab("Difference in RTs (ms) Between Conditions") +
xlab("Sentence Region") +
scale_x_continuous(breaks = c(-1, 0, 1, 2), labels= c ("Pre-Critical", "Critical", "Critical +1", "Critcal +2")) +
labs(color = "", linetype = "") +
facet_wrap(experiment~metric, scales="free_y", nrow = 3) +
theme(
legend.position = "bottom",
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
panel.grid.minor = element_blank()
)
ggsave(paste0("../visualization/paper/target_results_bayesisan", rate, ".pdf"), device="pdf", width = 8, height = 5.5)
# COMPARISON BETWEEN ALL MEASURES
plotting_df %>%
group_by(experiment) %>%
mutate(pval_y = max(upper)) %>%
ungroup() %>%
filter(metric == "Go Past Time") %>%
filter(measure != "Eye Tracking") %>%
ggplot(aes(x = sent_rg_id, y = m, color = measure)) +
geom_hline(yintercept = 0, color = "blue") +
geom_point() +
geom_errorbar(aes(ymax = upper, ymin = lower), width = 0.1) +
geom_line() +
geom_text(aes(label = sig, y = pval_y + 40), color = "black", size = 1.2) +
geom_text(aes(x = 0, y = pval_y + 60, label=""), show.legend = FALSE) +
coord_cartesian(xlim = c(-1.25, 2.25)) +
ylab("Difference in RTs (ms) Between Conditions") +
xlab("Sentence Region") +
scale_x_continuous(breaks = c(-1, 0, 1, 2), labels= c("Pre-Critical", "Critical", "Critical +1", "Critcal +2")) +
labs(color = "", linetype = "") +
facet_grid(experiment~measure, scales = "free_y") +
theme(
legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
panel.grid.minor = element_blank()
)
#ggsave(paste0("../visualization/paper/target_comp_bayesian", rate, ".pdf"), device="pdf", width = 8, height = 4.5)
# COMPARISON BETWEEN ALL MEASURES
plotting_df %>%
group_by(experiment) %>%
mutate(pval_y = max(upper)) %>%
ungroup() %>%
filter(metric == "Go Past Time") %>%
filter(measure != "Eye Tracking") %>%
ggplot(aes(x = sent_rg_id, y = m, color = measure)) +
geom_hline(yintercept = 0, color = "blue") +
geom_point() +
geom_errorbar(aes(ymax = upper, ymin = lower), width = 0.1) +
geom_line() +
geom_text(aes(label = cris, y = pval_y + 40), color = "black", size = 1.2) +
geom_text(aes(x = 0, y = pval_y + 60, label=""), show.legend = FALSE) +
coord_cartesian(xlim = c(-1.25, 2.25)) +
ylab("Difference in RTs (ms) Between Conditions") +
xlab("Sentence Region") +
scale_x_continuous(breaks = c(-1, 0, 1, 2), labels= c("Pre-Critical", "Critical", "Critical +1", "Critcal +2")) +
labs(color = "", linetype = "") +
facet_grid(experiment~measure, scales = "free_y") +
theme(
legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
panel.grid.minor = element_blank()
)
#ggsave(paste0("../visualization/paper/target_comp_bayesian", rate, ".pdf"), device="pdf", width = 8, height = 4.5)
# PLOTTING FOR ONLY MOTR AND EYE TRACKING
plotting_df %>%
filter(measure == "MoTR" | measure == "Eye Tracking") %>%
ggplot(aes(x = sent_rg_id, y = m, color = measure, linetype = measure)) +
geom_hline(yintercept = 0, color = "blue") +
geom_point() +
geom_errorbar(aes(ymax = upper, ymin = lower), width = 0.1) +
geom_line() +
geom_text(aes(label = cris, y = if_else(metric == "Regression Prob", 0.13, 200) ), size = 1.8) +
geom_text(aes(x = 0, y = if_else(metric == "Regression Prob", 0.15, 230), label=""), show.legend = FALSE) +
scale_color_manual(values = c("#000000", "#2eccc1")) +
coord_cartesian(xlim = c(-1.25, 2.25)) +
ylab("Difference in RTs (ms) Between Conditions") +
xlab("Sentence Region") +
scale_x_continuous(breaks = c(-1, 0, 1, 2), labels= c ("Pre-Critical", "Critical", "Critical +1", "Critcal +2")) +
labs(color = "", linetype = "") +
facet_wrap(experiment~metric, scales="free_y", nrow = 3) +
theme(
legend.position = "bottom",
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
panel.grid.minor = element_blank()
)
ggsave(paste0("../visualization/paper/target_results_cris", rate, ".pdf"), device="pdf", width = 8, height = 5.5)
# COMPARISON BETWEEN ALL MEASURES
plotting_df %>%
group_by(experiment) %>%
mutate(pval_y = max(upper)) %>%
ungroup() %>%
filter(metric == "Go Past Time") %>%
filter(measure != "Eye Tracking") %>%
ggplot(aes(x = sent_rg_id, y = m, color = measure)) +
geom_hline(yintercept = 0, color = "blue") +
geom_point() +
geom_errorbar(aes(ymax = upper, ymin = lower), width = 0.1) +
geom_line() +
geom_text(aes(label = cris, y = pval_y + 40), color = "black", size = 1.2) +
geom_text(aes(x = 0, y = pval_y + 60, label=""), show.legend = FALSE) +
coord_cartesian(xlim = c(-1.25, 2.25)) +
ylab("Difference in RTs (ms) Between Conditions") +
xlab("Sentence Region") +
scale_x_continuous(breaks = c(-1, 0, 1, 2), labels= c("Pre-Critical", "Critical", "Critical +1", "Critcal +2")) +
labs(color = "", linetype = "") +
facet_grid(experiment~measure, scales = "free_y") +
theme(
legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
panel.grid.minor = element_blank()
)
ggsave(paste0("../visualization/paper/target_comp_cris", rate, ".pdf"), device="pdf", width = 8, height = 4.5)
# COMPARISON BETWEEN ALL MEASURES
plotting_df %>%
group_by(experiment) %>%
mutate(pval_y = max(upper)) %>%
ungroup() %>%
filter(metric == "Go Past Time") %>%
filter(measure != "Eye Tracking") %>%
ggplot(aes(x = sent_rg_id, y = m, color = measure)) +
geom_hline(yintercept = 0, color = "blue") +
geom_point() +
geom_errorbar(aes(ymax = upper, ymin = lower), width = 0.1) +
geom_line() +
geom_text(aes(label = cris, y = pval_y + 40), color = "black", size = 1.8) +
geom_text(aes(x = 0, y = pval_y + 60, label=""), show.legend = FALSE) +
coord_cartesian(xlim = c(-1.25, 2.25)) +
ylab("Difference in RTs (ms) Between Conditions") +
xlab("Sentence Region") +
scale_x_continuous(breaks = c(-1, 0, 1, 2), labels= c("Pre-Critical", "Critical", "Critical +1", "Critcal +2")) +
labs(color = "", linetype = "") +
facet_grid(experiment~measure, scales = "free_y") +
theme(
legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
panel.grid.minor = element_blank()
)
ggsave(paste0("../visualization/paper/target_comp_cris", rate, ".pdf"), device="pdf", width = 8, height = 4.5)
# COMPARISON BETWEEN ALL MEASURES
plotting_df %>%
group_by(experiment) %>%
mutate(pval_y = max(upper)) %>%
ungroup() %>%
filter(metric == "Go Past Time") %>%
filter(measure != "Eye Tracking") %>%
ggplot(aes(x = sent_rg_id, y = m, color = measure)) +
geom_hline(yintercept = 0, color = "blue") +
geom_point() +
geom_errorbar(aes(ymax = upper, ymin = lower), width = 0.1) +
geom_line() +
geom_text(aes(label = cris, y = pval_y + 50), color = "black", size = 1.8) +
geom_text(aes(x = 0, y = pval_y + 70, label=""), show.legend = FALSE) +
coord_cartesian(xlim = c(-1.25, 2.25)) +
ylab("Difference in RTs (ms) Between Conditions") +
xlab("Sentence Region") +
scale_x_continuous(breaks = c(-1, 0, 1, 2), labels= c("Pre-Critical", "Critical", "Critical +1", "Critcal +2")) +
labs(color = "", linetype = "") +
facet_grid(experiment~measure, scales = "free_y") +
theme(
legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
panel.grid.minor = element_blank()
)
ggsave(paste0("../visualization/paper/target_comp_cris", rate, ".pdf"), device="pdf", width = 8, height = 4.5)
# COMPARISON BETWEEN ALL MEASURES
plotting_df %>%
group_by(experiment) %>%
mutate(pval_y = max(upper)) %>%
ungroup() %>%
filter(metric == "Go Past Time") %>%
filter(measure != "Eye Tracking") %>%
ggplot(aes(x = sent_rg_id, y = m, color = measure)) +
geom_hline(yintercept = 0, color = "blue") +
geom_point() +
geom_errorbar(aes(ymax = upper, ymin = lower), width = 0.1) +
geom_line() +
geom_text(aes(label = cris, y = pval_y + 60), color = "black", size = 1.8) +
geom_text(aes(x = 0, y = pval_y + 80, label=""), show.legend = FALSE) +
coord_cartesian(xlim = c(-1.25, 2.25)) +
ylab("Difference in RTs (ms) Between Conditions") +
xlab("Sentence Region") +
scale_x_continuous(breaks = c(-1, 0, 1, 2), labels= c("Pre-Critical", "Critical", "Critical +1", "Critcal +2")) +
labs(color = "", linetype = "") +
facet_grid(experiment~measure, scales = "free_y") +
theme(
legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
panel.grid.minor = element_blank()
)
ggsave(paste0("../visualization/paper/target_comp_cris", rate, ".pdf"), device="pdf", width = 8, height = 4.5)
# COMPARISON BETWEEN ALL MEASURES
plotting_df %>%
group_by(experiment) %>%
mutate(pval_y = max(upper)) %>%
ungroup() %>%
filter(metric == "Go Past Time") %>%
filter(measure != "Eye Tracking") %>%
ggplot(aes(x = sent_rg_id, y = m, color = measure)) +
geom_hline(yintercept = 0, color = "blue") +
geom_point() +
geom_errorbar(aes(ymax = upper, ymin = lower), width = 0.1) +
geom_line() +
geom_text(aes(label = cris, y = pval_y + 60), color = "black", size = 1.8) +
geom_text(aes(x = 0, y = pval_y + 90, label=""), show.legend = FALSE) +
coord_cartesian(xlim = c(-1.25, 2.25)) +
ylab("Difference in RTs (ms) Between Conditions") +
xlab("Sentence Region") +
scale_x_continuous(breaks = c(-1, 0, 1, 2), labels= c("Pre-Critical", "Critical", "Critical +1", "Critcal +2")) +
labs(color = "", linetype = "") +
facet_grid(experiment~measure, scales = "free_y") +
theme(
legend.position = "right",
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
panel.grid.minor = element_blank()
)
ggsave(paste0("../visualization/paper/target_comp_cris", rate, ".pdf"), device="pdf", width = 8, height = 4.5)
stats_df_bayesian <- read.csv("../results_data/stats_bayesian.csv")%>%
dplyr::select(-estimate, -lower_95, -upper_95, -std_error) %>%
rename(estimate_mean = mean)
plotting_df = merge(comb_agg_df, stats_df_bayesian, all=T, by = c("sent_rg_id", "metric", "experiment", "measure")) %>%
mutate(sig = if_else(measure != "Eye Tracking" & (upper_95_ms < 0 | lower_95_ms > 0), T, F)) %>%
mutate(cris = if_else(measure != "Eye Tracking" & sig == T, paste0("[",round(lower_95_ms, 2), ",\n", round(upper_95_ms, 2),"]"), "")) %>%
#mutate(sig = if_else(measure != "Eye Tracking" & (upper_95_ms < 0 | lower_95_ms > 0), paste("X", sep = ""), F)) %>%
mutate(measure = factor(measure, levels = c("MoTR", "Eye Tracking", "A-Maze", "G-Maze", "SPR"))) %>%
mutate(metric = factor(metric, levels = c("first_duration", "gaze_duration", "go_past_time", "total_duration", "FPReg"),
labels = c("First Duration", "Gaze Duration", "Go Past Time", "Total Duration", "Regression Prob"))) %>%
filter(metric != "First Duration")
stats_df_bayesian
write.csv(stats_df_bayesian, "./stats_df.csv")
stats_df_bayesian
stats_df_bayesian %>%
filter(experiment == "Adverb") %>%
filter(sent_rg_id == 0)
stats_df_bayesian %>%
filter(measure = "MoTR") %>%
filter(experiment == "Adverb") %>%
filter(sent_rg_id == 1)
stats_df_bayesian %>%
filter(measure == "MoTR") %>%
filter(experiment == "Adverb") %>%
filter(sent_rg_id == 1)
stats_df_bayesian %>%
mutate(estimate_mean = round(estimate_mean, digits=2),
lower_95_ms = round(lower_95_ms, digits=2),
upper_95_ms = round(upper_95_ms, digits=2))
filter(measure == "MoTR") %>%
filter(experiment == "Adverb") %>%
filter(sent_rg_id == 1)
stats_df_bayesian %>%
mutate(estimate_mean = round(estimate_mean, digits=2),
lower_95_ms = round(lower_95_ms, digits=2),
upper_95_ms = round(upper_95_ms, digits=2)) %>%
filter(measure == "MoTR") %>%
filter(experiment == "Adverb") %>%
filter(sent_rg_id == 1)
stats_df_bayesian %>%
mutate(estimate_mean = round(estimate_mean, digits=2),
lower_95_ms = round(lower_95_ms, digits=2),
upper_95_ms = round(upper_95_ms, digits=2)) %>%
filter(measure == "MoTR") %>%
filter(experiment == "Adverb") %>%
filter(sent_rg_id == 2)
stats_df_bayesian %>%
mutate(estimate_mean = round(estimate_mean, digits=2),
lower_95_ms = round(lower_95_ms, digits=2),
upper_95_ms = round(upper_95_ms, digits=2)) %>%
filter(measure == "MoTR") %>%
filter(experiment == "Adverb") %>%
filter(sent_rg_id == 0)
stats_df_bayesian %>%
mutate(estimate_mean = round(estimate_mean, digits=2),
lower_95_ms = round(lower_95_ms, digits=2),
upper_95_ms = round(upper_95_ms, digits=2)) %>%
filter(measure == "MoTR") %>%
filter(experiment == "Adverb") %>%
filter(sent_rg_id == -1)
stats_df_bayesian %>%
mutate(estimate_mean = round(estimate_mean, digits=2),
lower_95_ms = round(lower_95_ms, digits=2),
upper_95_ms = round(upper_95_ms, digits=2)) %>%
filter(measure == "MoTR") %>%
filter(experiment == "Adverb") %>%
filter(sent_rg_id == 0)
stats_df_bayesian %>%
mutate(estimate_mean = round(estimate_mean, digits=2),
lower_95_ms = round(lower_95_ms, digits=2),
upper_95_ms = round(upper_95_ms, digits=2)) %>%
filter(measure == "MoTR") %>%
filter(experiment == "Adverb") %>%
filter(sent_rg_id == 1)
stats_df_bayesian %>%
mutate(estimate_mean = round(estimate_mean, digits=2),
lower_95_ms = round(lower_95_ms, digits=2),
upper_95_ms = round(upper_95_ms, digits=2)) %>%
filter(measure == "MoTR") %>%
filter(experiment == "Adverb") %>%
filter(sent_rg_id == 2)
stats_df_bayesian %>%
mutate(estimate_mean = round(estimate_mean, digits=2),
lower_95_ms = round(lower_95_ms, digits=2),
upper_95_ms = round(upper_95_ms, digits=2)) %>%
filter(measure == "MoTR") %>%
filter(experiment == "Coordination") %>%
filter(sent_rg_id == 0)
stats_df_bayesian %>%
mutate(estimate_mean = round(estimate_mean, digits=2),
lower_95_ms = round(lower_95_ms, digits=2),
upper_95_ms = round(upper_95_ms, digits=2)) %>%
filter(measure == "MoTR") %>%
filter(experiment == "Coordination") %>%
filter(sent_rg_id == 1)
stats_df_bayesian %>%
mutate(estimate_mean = round(estimate_mean, digits=2),
lower_95_ms = round(lower_95_ms, digits=2),
upper_95_ms = round(upper_95_ms, digits=2)) %>%
filter(measure == "MoTR") %>%
filter(experiment == "Coordination") %>%
filter(sent_rg_id == 0)
stats_df_bayesian
stats_df_bayesian %>%
mutate(estimate_mean = round(estimate_mean, digits=2),
lower_95_ms = round(lower_95_ms, digits=2),
upper_95_ms = round(upper_95_ms, digits=2)) %>%
filter(measure == "MoTR") %>%
filter(experiment == "Relative Clause	") %>%
filter(sent_rg_id == 0)
stats_df_bayesian %>%
mutate(estimate_mean = round(estimate_mean, digits=2),
lower_95_ms = round(lower_95_ms, digits=2),
upper_95_ms = round(upper_95_ms, digits=2)) %>%
filter(measure == "MoTR") %>%
filter(experiment == "Relative Clause") %>%
filter(sent_rg_id == 0)
stats_df_bayesian %>%
mutate(estimate_mean = round(estimate_mean, digits=2),
lower_95_ms = round(lower_95_ms, digits=2),
upper_95_ms = round(upper_95_ms, digits=2)) %>%
filter(measure == "SPR") %>%
filter(experiment == "Adverb") %>%
filter(sent_rg_id == 1)
stats_df_bayesian %>%
mutate(estimate_mean = round(estimate_mean, digits=2),
lower_95_ms = round(lower_95_ms, digits=2),
upper_95_ms = round(upper_95_ms, digits=2)) %>%
filter(measure == "G-Maze") %>%
filter(experiment == "Adverb") %>%
filter(sent_rg_id == 1)
stats_df_bayesian %>%
mutate(estimate_mean = round(estimate_mean, digits=2),
lower_95_ms = round(lower_95_ms, digits=2),
upper_95_ms = round(upper_95_ms, digits=2)) %>%
filter(measure == "G-Maze") %>%
filter(experiment == "Adverb") %>%
filter(sent_rg_id == 0)
stats_df_bayesian
stats_df_bayesian %>%
mutate(estimate_mean = round(estimate_mean, digits=2),
lower_95_ms = round(lower_95_ms, digits=2),
upper_95_ms = round(upper_95_ms, digits=2)) %>%
filter(measure == "G-Maze") %>%
filter(experiment == "Adverb") %>%
filter(sent_rg_id == 0)
stats_df_bayesian %>%
mutate(estimate_mean = round(estimate_mean, digits=2),
lower_95_ms = round(lower_95_ms, digits=2),
upper_95_ms = round(upper_95_ms, digits=2)) %>%
filter(measure == "G-Maze") %>%
filter(experiment == "Relative Clause") %>%
filter(sent_rg_id == 0)
stats_df_bayesian %>%
mutate(estimate_mean = round(estimate_mean, digits=2),
lower_95_ms = round(lower_95_ms, digits=2),
upper_95_ms = round(upper_95_ms, digits=2)) %>%
filter(measure == "A-Maze") %>%
filter(experiment == "Relative Clause") %>%
filter(sent_rg_id == 0)
stats_df_bayesian %>%
mutate(estimate_mean = round(estimate_mean, digits=2),
lower_95_ms = round(lower_95_ms, digits=2),
upper_95_ms = round(upper_95_ms, digits=2)) %>%
filter(measure == "A-Maze") %>%
filter(experiment == "Adverb") %>%
filter(sent_rg_id == 0)
stats_df_bayesian %>%
mutate(estimate_mean = round(estimate_mean, digits=2),
lower_95_ms = round(lower_95_ms, digits=2),
upper_95_ms = round(upper_95_ms, digits=2)) %>%
filter(measure == "A-Maze") %>%
filter(experiment == "Coordination") %>%
filter(sent_rg_id == 0)
