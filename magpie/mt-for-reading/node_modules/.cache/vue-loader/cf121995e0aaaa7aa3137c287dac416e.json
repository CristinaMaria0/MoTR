{"remainingRequest":"/Users/cui/Documents/ETH/MoTR/magpie/mt-for-reading/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cui/Documents/ETH/MoTR/magpie/mt-for-reading/src/App.vue?vue&type=style&index=0&id=7ba5bd90&lang=css&","dependencies":[{"path":"/Users/cui/Documents/ETH/MoTR/magpie/mt-for-reading/src/App.vue","mtime":1670507517722},{"path":"/Users/cui/Documents/ETH/MoTR/magpie/mt-for-reading/node_modules/css-loader/dist/cjs.js","mtime":1670447655473},{"path":"/Users/cui/Documents/ETH/MoTR/magpie/mt-for-reading/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1670447657348},{"path":"/Users/cui/Documents/ETH/MoTR/magpie/mt-for-reading/node_modules/postcss-loader/src/index.js","mtime":1670447656211},{"path":"/Users/cui/Documents/ETH/MoTR/magpie/mt-for-reading/node_modules/cache-loader/dist/cjs.js","mtime":1670447655120},{"path":"/Users/cui/Documents/ETH/MoTR/magpie/mt-for-reading/node_modules/vue-loader/lib/index.js","mtime":1670447657348}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5leHBlcmltZW50IHsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7Cn0KCi5zY3JlZW4gewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICB3aWR0aDogODAlOwogIGhlaWdodDogYXV0bzsKfQoKLnJlYWRpbmdUZXh0IHsKICAvKiB6LWluZGV4OiAxOyAqLwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBjb2xvcjogd2hpdGU7CiAgdGV4dC1hbGlnbjogbGVmdDsKICBjdXJzb3I6IG5vbmU7Cn0KCmJ1dHRvbiB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGJvdHRvbTogMDsKICBsZWZ0OiA1MCU7Cn0KCi5yZWN0LWN1cnNvciB7CiAgcG9zaXRpb246IGZpeGVkOwogIC8qIGxlZnQ6IDEwcHg7ICovCiAgei1pbmRleDogMjsKICB3aWR0aDogMnB4OwogIGhlaWdodDogMnB4OwogIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpOwogIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOwogIG1peC1ibGVuZC1tb2RlOiBkaWZmZXJlbmNlOwogIC8qIGJvcmRlci1yYWRpdXM6IDUwJTsgKi8KICBwb2ludGVyLWV2ZW50czogbm9uZTsKICB0cmFuc2l0aW9uOiB3aWR0aCAwLjVzLCBoZWlnaHQgMC41czsKICAgCn0gCgoucmVjdC1jdXJzb3IuZ3JvdyB7CiAgd2lkdGg6IDEyMHB4OwogIGhlaWdodDogMzBweDsKICB0cmFuc2l0aW9uOiB3aWR0aCAwLjVzLCBoZWlnaHQgMC41czsKfQoKLm91dC1jdXJzb3IgewogIG1hcmdpbjogMTdweCAwOwogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBwb2ludGVyLWV2ZW50czogbm9uZTsKICBjb2xvcjogYmxhY2s7CiAgdGV4dC1hbGlnbjogbGVmdDsKfQoK"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";AAsMA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <Experiment title=\"Test blur text with mouse tracking \">\n    <InstructionScreen :title=\"'Welcome'\">\n      <p>This is a sample introduction screen.</p>\n      <p>Please use the \"Fullscreen Mode\" for the duration of the experiment:\n        <a href=\"javascript:void(0)\" @click=\"turnOnFullScreen\">Fullscreen Mode</a>\n      </p>\n      <!-- v-blur=\"isBlurred\" -->\n      <p >This experiment can sometimes be difficult. Please be patient</p>\n    </InstructionScreen>\n\n    Make two test screens to see how to blur text, tracking mouse, unblur text and recode data.\n    <template v-for=\"(trial, i) of testTrials\">\n      <Screen :key=\"i\" MousetrackingStart>\n        <Slide>\n\n          <div class=\"rect-cursor\"></div>\n            <!-- @mousemove=\"moveCursor\" -->\n\n          <p class=\"readingText\" @mouseover=\"changeFont\" @mouseleave=\"changeBack\" @mousemove=\"moveCursor\">\n          <!-- <p class=\"readingText\" v-blur=\"blurConfig\" >       -->\n            {{trial.item_content}}\n          </p>\n\n          <div class=\"out-cursor\" style=\"opacity: 0.3; filter: blur(3.5px); transition: all 0.3s linear 0s;\"> \n            {{trial.item_content}}\n          </div>\n\n          <!-- <button class=\"next\" @click=\" saveMouseMoveData(); $magpie.saveAndNextScreen()\"> -->\n          <button class=\"next\" @click=\" saveMouseMoveData(); $magpie.nextScreen()\">\n            Next\n          </button>\n\n          <!-- <Record\n            :data=\"{\n            itemId: trial.item_id,\n            tem: trial.item_content,\n            }\"\n          /> -->\n\n        </Slide>\n      </Screen>\n    </template>\n\n    <SubmitResultsScreen />\n  </Experiment>\n</template>\n\n<script>\n// Load data from csv files as javascript arrays with objects\nimport testTrials from '../trials/testTrials.csv';\nimport _ from 'lodash';\nimport Vue from 'vue';\nimport vBlur from 'v-blur';\n\nVue.use(vBlur)\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      testTrials,\n      isBlurred: true,\n  }},\n\n  computed: {\n\n  },\n\n  methods: {\n    changeFont() {\n      console.log('good');\n      // $magpie.mousetracking.start();\n      this.$el.querySelector(\".rect-cursor\").classList.add('grow')\n      \n    },\n\n    changeBack() {\n      console.log('back');\n      this.$el.querySelector(\".rect-cursor\").classList.remove('grow');\n    },\n\n    moveCursor(e) {\n      // console.log('great');\n      let x = e.clientX;\n      let y = e.clientY;\n      // console.log(x);\n      // console.log(y);\n      \n      this.$el.querySelector(\".rect-cursor\").style.left = `${x}px`;\n      this.$el.querySelector(\".rect-cursor\").style.top = `${y}px`;\n      // this.$el.querySelector(\".out-cursor\").style.left = `${x}px`;\n      // this.$el.querySelector(\".out-cursor\").style.top = `${y}px`;\n    },\n\n    saveMouseMoveData() {\n      $magpie.addTrialData(\n        {\n        time: $magpie.mousetracking.getMouseTrack()['mt_time'], \n        x: $magpie.mousetracking.getMouseTrack()['mt_x'], \n        y: $magpie.mousetracking.getMouseTrack()['mt_y'],\n        startTime: $magpie.mousetracking.getMouseTrack()['mt_start_time']}\n        );\n      console.log('added!')\n    },\n\n    async turnOnFullScreen() {\n      if (!document.fullscreenElement) {\n        try {\n          await document.documentElement.requestFullscreen();\n          return true;\n        } catch (e) {\n          return false;\n        }\n      }\n      return true;\n    },\n    turnOffFullScreen() {\n      document.exitFullscreen();\n    },\n    getScreenDimensions() {\n      return {\n        window_inner_width: window.innerWidth,\n        window_inner_height: window.innerHeight\n      };\n    }\n  },\n\n  // mounted() {\n  //   this.$el.addEventListener('mousemove', this.moveCursor); \n  // },\n  // destroyed() {\n  //   this.$el.removeEventListener('mousemove', this.moveCursor);},\n  \n\n};\n\n</script>\n\n\n<style>\n  .experiment {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  .screen {\n    position: relative;\n    width: 80%;\n    height: auto;\n  }\n\n  .readingText {\n    /* z-index: 1; */\n    position: absolute;\n    color: white;\n    text-align: left;\n    cursor: none;\n  }\n\n  button {\n    position: absolute;\n    bottom: 0;\n    left: 50%;\n  }\n\n  .rect-cursor {\n    position: fixed;\n    /* left: 10px; */\n    z-index: 2;\n    width: 2px;\n    height: 2px;\n    transform: translate(-50%, -50%);\n    background-color: white;\n    mix-blend-mode: difference;\n    /* border-radius: 50%; */\n    pointer-events: none;\n    transition: width 0.5s, height 0.5s;\n     \n  } \n\n  .rect-cursor.grow {\n    width: 120px;\n    height: 30px;\n    transition: width 0.5s, height 0.5s;\n  }\n\n  .out-cursor {\n    margin: 17px 0;\n    position: absolute;\n    pointer-events: none;\n    color: black;\n    text-align: left;\n  }\n\n</style>\n"]}]}